name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened, ready_for_review]

env:
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Ruff lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v5
      - name: Set up uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: uv sync --extra dev --locked
      - name: Run Ruff
        run: uv run --extra dev ruff check

  type-check:
    name: Mypy type check
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v5
      - name: Set up uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: uv sync --extra dev --locked
      - name: Run mypy
        run: uv run --extra dev mypy app

  tests:
    name: Pytest
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.12', '3.13']
    steps:
      - name: Check out repository
        uses: actions/checkout@v5
      - name: Set up uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: uv sync --extra dev --locked
      - name: Run pytest
        run: uv run pytest

  live-openai-tests:
    name: OpenAI integration tests
    runs-on: ubuntu-latest
    needs:
      - tests
    if: ${{ env.OPENAI_API_KEY != '' }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v5
      - name: Set up uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: uv sync --extra dev --locked
      - name: Run live OpenAI tests
        run: uv run pytest tests/test_llm_live.py
