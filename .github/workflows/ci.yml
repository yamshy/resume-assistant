name: CI

on:
  push:
    branches: [main]
  pull_request:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            backend:
              - 'apps/backend/**'
              - 'shared/api-types/**'
              - '.github/workflows/**'
              - '.mise.toml'
              - 'docker/**'
            frontend:
              - 'apps/frontend/**'
              - 'shared/api-types/**'
              - '.github/workflows/**'
              - '.mise.toml'
              - 'docker/**'

  backend:
    needs: changes
    if: needs.changes.outputs.backend == 'true'
    runs-on: ubuntu-latest
    env:
      UV_PYTHON_VERSION: '3.13'
    defaults:
      run:
        working-directory: apps/backend
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ env.UV_PYTHON_VERSION }}

      - name: Cache uv dependencies
        uses: actions/cache@v4
        with:
          path: |
            apps/backend/.venv
            ${{ env.HOME }}/.cache/uv
          key: ${{ runner.os }}-uv-${{ env.UV_PYTHON_VERSION }}-${{ hashFiles('apps/backend/uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-uv-${{ env.UV_PYTHON_VERSION }}-

      - name: Sync dependencies
        run: uv sync --extra dev --frozen

      - name: Ruff lint
        run: uv run --extra dev ruff check

      - name: mypy type check
        run: uv run --extra dev mypy app

      - name: Pytest
        run: uv run pytest

  frontend:
    needs: changes
    if: needs.changes.outputs.frontend == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: apps/frontend
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: '1.1.27'

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Lint
        run: bun run lint

      - name: Type check
        run: bun run check

      - name: Test
        run: bun run test

      - name: Build
        run: bun run build
